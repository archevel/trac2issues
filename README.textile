h1. Trac to GitHub Issues conversion script

Imports are now working, including comments, and various optional
metadata (as labels).

h2. Usage

<pre class="console">$ ./trac2issues.py --help
Usage: trac2issues.py [options]

Options:
  -h, --help            show this help message and exit
  -t TRAC, --trac=TRAC  Path to the Trac project to export.
  -a ACCOUNT, --account=ACCOUNT
                        Name of the GitHub Account to import into. (If neither
                        this nor --account is specified, user from your global
                        git config will be used.)
  -p PROJECT, --project=PROJECT
                        Name of the GitHub Project to import into.
  -x, --closed          Include closed tickets.
  -y, --type            Create a label for the Trac ticket type.
  -c, --component       Create a label for the Trac component.
  -m, --milestone       Create a label for the Trac milestone.
  -r, --reporter        Create a label for the Trac reporter.
  -o, --owner           Create a label for the Trac owner.
  -u URL, --url=URL     Base URL for the Trac install (if specified, will
                        create a link to the old ticket in a comment).
  -g ORGANIZATION, --org=ORGANIZATION
                        Name of GitHub Organization (supercedes --account)
</pre>

<pre class="console">
sudo ./trac2issues.py \
    -t /var/lib/trac/davglass \
    -p footest -m -x -o -r -c \
    -u http://bugs.davglass.com/projects/davglass
</pre>

h2. Limitations

It's rather slow: GitHub limits us to 60 API calls per second, and
each issue might take several calls (one to create the issue, one per
comment to add, one per label to add).

This varies depending on which options you enable; more = slower.

h2. Advice

It is highly recommended to create a scratch github repository to run
your imports to, before doing it to your real project repository.
This is because it may take you several tries to decide exactly which
options you want, and verify that it's going to work.

Also, if you care about preserving issue numbers, your best bet is to
use the -x option and do some trial runs on a scratch repo before
trying it on your real repo.  GitHub doesn't allow you to delete
issues, so you want to get it right in a single run.  (We don't yet
try to work around numbering gaps due to deleted trac issues.)
